import ants/language_v1
import cimporter/configs

antExport ImporterConfig:
  cimports:list:
    - ImportConfig:
      name: "cheerp"
      sources: "client/"
      headerPrefix: "cheerp/"
      globs: ["**/*.h"]
      includes: [
        "client/",
      ]
      defines: ["LEAN_CXX_LIB"]
      skipFiles: ["cheerpintrin.h"]

      # c2NimCfgs:list:
      #   - C2NimCfg:
      #     fileMatch: peg"'u16string.h'"
      #     rawNims: str"""
      #         type
      #           uintLeast16T * {.importc: "uint_least16_t", header: "stddef.h", bycopy.} = object
      #         """
      sourceMods:list:
        - CSrcMods:
          fileMatch: peg"'.h'"
          substitutes:list:
            Replace(pattern: peg"'[[cheerp::genericjs]]'", repl: "")
            Replace(pattern: peg"'__attribute__((noinline))'", repl: "")
            Replace(pattern: peg"'size_t len = 18446744073709551615UL'", repl: "size_t len = csize_t.high")
        - CSrcMods:
          fileMatch: peg"'client.h'"
          deletes:list:
            - LineDelete:
              match: peg"'typename... Args'"
              until: peg"'}'"
              inclusive: true
            - LineDelete:
              match: peg"'#define _CHEERP'"
        - CSrcMods:
          fileMatch: peg"'cheerpintrin.h'"
          deletes:list:
            - LineDelete:
              match: peg"'template<class R, class P>'"
              until: peg"'__builtin_cheerp_throw'"
              inclusive: true
        - CSrcMods:
          fileMatch: peg"'types.h'"
          deletes:list:
            - LineDelete:
              match: peg"'static_cast<T*>((client::Object*)nullptr);'"
              until: peg"'Array::operator[](index)'"
              inclusive: true
            - LineDelete:
              match: peg"'typename... Args'"
              until: peg"'... args'"
              inclusive: true
            - LineDelete:
              match: peg"'String* concat(Args... args)'"
              until: peg"'}'"
              inclusive: true
            - LineDelete:
              match: peg"'TArray(Args... args'"
              until: peg"'}'"
              inclusive: true
            - LineDelete:
              match: peg"'String(const wchar_t'"
              until: peg"'}'"
              inclusive: true
        - CSrcMods:
          fileMatch: peg"'jsobject.h'"
          deletes:list:
            - LineDelete:
              match: peg"'explicit operator double' / 'explicit operator int() const'"
              until: peg"'}'"
              inclusive: true
        - CSrcMods:
          fileMatch: peg"'clientlib.h'"
          deletes:list:
            - LineDelete:
              match: peg"'template<class ReturnType = Object*> ReturnType get_value'"
            - LineDelete:
              match: peg"'template<class ReturnType = Object*> ReturnType get'"
            - LineDelete:
              match: peg"'template<typename... Args> Array* concat'"
            - LineDelete:
              match: peg"'template<typename... Args> double max'"
            - LineDelete:
              match: peg"'template<typename... Args> double min'"
            - LineDelete:
              match: peg"'template<class ReturnType = Object*> ReturnType compile'"
            - LineDelete:
              match: peg"'String* get_$'"
            - LineDelete:
              match: peg"'template<class ReturnType = Object*> ReturnType'"
            - LineDelete:
              match: peg"'template<typename... Args> static'"
            - LineDelete:
              match: peg"'template<typename... Args> ' \ident+ "
            - LineDelete:
              match: peg"'void set_memory'"
              until: peg"'void clear()'"
              inclusive: false
            - LineDelete:
              match: peg"'Console();'"
              until: peg"'void _assert(bool condition'"
              inclusive: true



          
        